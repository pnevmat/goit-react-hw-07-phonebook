{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions/didMountStoreUpdate.js","redux/actions/addContact.js","redux/actions/deleteContact.js","redux/reducers/contactsReducer.js","redux/actions/searchContacts.js","redux/reducers/filterReducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/operations/storeUpdateOperation.js","redux/operations/addContactOperation.js","redux/operations/deleteContactOperation.js","redux/operations/filterContactsOperation.js","redux/selectors/selectors.js","redux/containers/container.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","updateStoreRequest","createAction","updateStoreSuccess","updateStoreError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactsReducer","createReducer","storeUpdate","_","payload","addContact","state","deleteContact","filter","contact","id","onSearchContacts","filterReducer","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","logger","devTools","process","ContactForm","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","onSubmit","props","className","styles","addContact_form","preventDefault","target","elements","addContact_label","htmlFor","input_text","addContact_input","type","placeholder","onChange","addContact_button","Component","Filter","search_label","search_text","search_input","ContactList","foundContacts","onDeleteContact","contactList","map","contact_item","contact_item_container","contact_name","contact_button","onClick","defaultProps","avatar","PhoneBook","onStateUpdate","obj","onAddContact","find","alert","this","onFilterContacts","length","axios","defaults","baseURL","onStoreUpdate","text","dispatch","actions","get","then","data","catch","error","post","delete","getAllContacts","getFilter","contactsFinderHandler","createSelector","toLowerCase","includes","PhoneBookContainer","connect","selectors","contactId","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36a98c2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_label\":\"Filter_search_label__1GeDd\",\"search_text\":\"Filter_search_text__1xyE-\",\"search_input\":\"Filter_search_input__2mfFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2Zgpx\",\"contact_item\":\"ContactList_contact_item__3KcN_\",\"contact_item_container\":\"ContactList_contact_item_container__fQLmZ\",\"contact_name\":\"ContactList_contact_name__V856U\",\"contact_button\":\"ContactList_contact_button__13nJZ\"};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst updateStoreRequest = createAction('update/storeRequest');\r\nconst updateStoreSuccess = createAction('update/storeSuccess');\r\nconst updateStoreError = createAction('update/storeError');\r\n\r\nexport default {updateStoreRequest, updateStoreSuccess, updateStoreError};","import {createAction} from '@reduxjs/toolkit';\r\n\r\n// const onAddContact = createAction('add/contact', ({name, number}) => ({\r\n//     payload: {\r\n//         id: shortid.generate(),\r\n//         name: name,\r\n//         number: number\r\n//     }\r\n// }));\r\n\r\nconst addContactRequest = createAction('add/contactRequest');\r\nconst addContactSuccess = createAction('add/contactSuccess');\r\nconst addContactError = createAction('add/contactError');\r\n\r\nexport default {addContactRequest, addContactSuccess, addContactError};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst deleteContactRequest = createAction('delete/contactRequest');\r\nconst deleteContactSuccess = createAction('delete/contactSuccess');\r\nconst deleteContactError = createAction('delete/contactError');\r\n\r\nexport default {deleteContactRequest, deleteContactSuccess, deleteContactError};","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport storeUpdate from '../actions/didMountStoreUpdate';\r\nimport addContact from '../actions/addContact';\r\nimport deleteContact from '../actions/deleteContact';\r\n\r\nconst contactsReducer = createReducer([], {\r\n    [storeUpdate.updateStoreSuccess]: (_, {payload}) => [...payload],\r\n    [addContact.addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContact.deleteContactSuccess]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n});\r\n\r\nexport default contactsReducer;","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst onSearchContacts = createAction('search/contacts');\r\n\r\nexport default onSearchContacts;","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport onSearchContacts from '../actions/searchContacts';\r\n\r\nconst filterReducer = createReducer('', {\r\n    [onSearchContacts]: (_, {payload}) => payload\r\n});\r\n\r\nexport default filterReducer;","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './reducers/contactsReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n        filter: filterReducer\r\n    },\r\n    middleware: [\r\n        ...getDefaultMiddleware(),\r\n        logger\r\n    ],\r\n    devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {onSubmit} = this.props;\r\n        onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.addContact_form} onSubmit={(e) => {\r\n                e.preventDefault();\r\n                this.handleSubmit();\r\n                e.target.elements.name.value = '';\r\n                e.target.elements.number.value = '';\r\n                }}\r\n            >\r\n                <label className={styles.addContact_label} htmlFor=\"\" name=\"contact\">\r\n                    <span className={styles.input_text}>Enter your name</span>\r\n                    <input className={styles.addContact_input} type=\"text\" placeholder=\"name\" name=\"name\" onChange={e => {\r\n                      this.handleChange(e);\r\n                  }}/>\r\n                </label>\r\n                <label className={styles.addContact_label}>\r\n                    <span className={styles.input_text}>Enter your phone number</span>\r\n                    <input className={styles.addContact_input} type=\"tel\" placeholder=\"phone\" name=\"number\" onChange={e => {\r\n                      this.handleChange(e);\r\n                  }}/>\r\n                </label>\r\n                <button className={styles.addContact_button} type=\"submit\">Add Contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({onChange}) => (\r\n    <label className={styles.search_label}>\r\n        <span className={styles.search_text}>Find contacts by name</span>\r\n        <input className={styles.search_input} type=\"text\" placeholder=\"name\" onChange={(e) => {\r\n            e.preventDefault();\r\n            const value = e.target.value;\r\n            onChange(value);\r\n          }}>\r\n        </input>\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({filter, state, foundContacts, onDeleteContact}) => (\r\n  <ul className={styles.contactList}>\r\n    {filter === '' ?\r\n      state.map(contact => (\r\n        <li className={styles.contact_item} key={contact.id}>\r\n          <div className={styles.contact_item_container}>\r\n            <p className={styles.contact_name}>{contact.name}: {contact.number}</p>\r\n            <button className={styles.contact_button} type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n          </div>\r\n        </li>\r\n      )) :\r\n      foundContacts.map(contact => (\r\n        <li className={styles.contact_item} key={contact.id}>\r\n          <div className={styles.contact_item_container}>\r\n            <p className={styles.contact_name}>{contact.name}: {contact.number}</p>\r\n            <button className={styles.contact_button} type=\"button\">Delete</button>\r\n          </div>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nContactList.defaultProps = {\r\n  avatar: {}\r\n};\r\n\r\nContactList.propTypes = {\r\n  foundContacts: PropTypes.arrayOf(\r\n      PropTypes.object\r\n  ),\r\n  state: PropTypes.arrayOf(\r\n    PropTypes.object.isRequired\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\n// import {connect} from 'react-redux';\r\n\r\n// import onStoreUpdate from './redux/operations/storeUpdateOperation';\r\n// import onAddContact from './redux/operations/addContactOperation';\r\n// import onDeleteContact from './redux/operations/deleteContactOperation';\r\n// import onSearchContacts from './redux/actions/searchContacts';\r\n\r\n// import selectors from './redux/selectors/selectors';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nimport './App.css';\r\n\r\nclass PhoneBook extends Component {\r\n\r\n  // componentDidMount() {\r\n  //   const {onStoreUpdate} = this.props;\r\n\r\n  //     onStoreUpdate();\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n    \r\n  // };\r\n\r\n  onStateUpdate = (obj) => {\r\n    const {onAddContact} = this.props;\r\n\r\n    if (this.props.contacts.find(contact => contact.name === obj.name)) {\r\n      alert(`${obj.name}is alredy in contacts`);\r\n\r\n    } else {\r\n      onAddContact(obj);\r\n    };\r\n  };\r\n\r\n  // contactsFinderHandler = () => {\r\n  //   const {contacts} = this.props;\r\n\r\n  //   if (this.props.filter !== '') {\r\n  //     const foundContacts = contacts.filter(contact => \r\n  //       contact.name.toLowerCase().includes(this.props.filter));\r\n  //     return foundContacts\r\n  //   };\r\n  // };\r\n\r\n  render() {\r\n    const {onFilterContacts, contacts, filter, foundContacts, onDeleteContact} = this.props;\r\n    // const foundContacts = selectors.contactsFinderHandler(contacts, filter);\r\n    return (\r\n      <section className=\"section\">\r\n        <h1>Phone Book</h1>\r\n        <ContactForm onSubmit={this.onStateUpdate}/>\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={onFilterContacts} />\r\n        {contacts.length !== 0 &&\r\n          <ContactList \r\n          foundContacts={foundContacts}\r\n          state={contacts}\r\n          filter={filter}\r\n          onDeleteContact={onDeleteContact}\r\n        />}\r\n        \r\n      </section>\r\n    )\r\n  }\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: selectors.getAllContacts(state),\r\n//   filter: selectors.getFilter(state)\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onStoreUpdate: contacts => dispatch(onStoreUpdate(contacts)),\r\n//   onAddContact: contact => dispatch(onAddContact(contact)),\r\n//   onDeleteContact: contactId => dispatch(onDeleteContact(contactId)),\r\n//   onSearchContacts: event => dispatch(onSearchContacts(event))\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n\r\nexport default PhoneBook;","import axios from 'axios';\r\nimport actions from '../actions/didMountStoreUpdate';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst onStoreUpdate = text => dispatch => {\r\n\r\n    dispatch(actions.updateStoreRequest());\r\n\r\n    axios.get('/contacts')\r\n    .then(({data}) => {\r\n        return dispatch(actions.updateStoreSuccess(data))})\r\n    .catch(error => {\r\n        return dispatch(actions.updateStoreError(error))})\r\n}\r\n\r\nexport default onStoreUpdate;","import axios from 'axios';\r\nimport actions from '../actions/addContact';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst onAddContact = text => dispatch => {\r\n\r\n    const contact = {...text}\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    axios.post('/contacts', contact)\r\n        .then(({data}) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport default onAddContact;","import axios from 'axios';\r\nimport actions from '../actions/deleteContact';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst onDeleteContact = id => dispatch => {\r\n\r\n    dispatch(actions.deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${id}`)\r\n        .then(({data}) => dispatch(actions.deleteContactSuccess(id)))\r\n        .catch(error => dispatch(actions.deleteContactError(error)))\r\n};\r\n\r\nexport default onDeleteContact;","import onSearchContacts from '../actions/searchContacts';\r\n\r\nconst onFilterContacts = text => dispatch => {\r\n    dispatch(onSearchContacts(text));\r\n};\r\n\r\nexport default onFilterContacts;","import {createSelector} from '@reduxjs/toolkit'\r\n\r\nconst getAllContacts = state => {\r\n  return state.contacts\r\n};\r\n\r\nconst getFilter = state => state.filter;\r\n\r\n// const contactsFinderHandler = (contacts, filter) => {\r\n\r\n//     if (filter !== '') {\r\n//       const foundContacts = contacts.filter(contact => \r\n//         contact.name.toLowerCase().includes(filter));\r\n//       return foundContacts\r\n//     };\r\n// };\r\n\r\nconst contactsFinderHandler = createSelector([getAllContacts, getFilter], (contacts, filter) => {\r\n  if (filter !== '' && contacts.length > 0) {\r\n    const foundContacts = contacts.filter(contact => \r\n      contact.name.toLowerCase().includes(filter));\r\n    return foundContacts\r\n  };\r\n});\r\n\r\nexport default {getAllContacts, getFilter, contactsFinderHandler};","import { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport onStoreUpdate from '../operations/storeUpdateOperation';\r\nimport onAddContact from '../operations/addContactOperation';\r\nimport onDeleteContact from '../operations/deleteContactOperation';\r\nimport onFilterContacts from '../operations/filterContactsOperation';\r\n\r\nimport selectors from '../selectors/selectors';\r\n\r\nimport PhoneBook from '../../App';\r\n\r\nclass PhoneBookContainer extends Component {\r\n    componentDidMount() {\r\n        const {onStoreUpdate} = this.props;\r\n      \r\n        onStoreUpdate();\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onAddContact,\r\n            onDeleteContact,\r\n            onFilterContacts,\r\n            contacts,\r\n            foundContacts,\r\n            filter\r\n        } = this.props;\r\n        return <PhoneBook \r\n            contacts={contacts}\r\n            filter={filter}\r\n            onAddContact={onAddContact}\r\n            onDeleteContact={onDeleteContact}\r\n            onFilterContacts={onFilterContacts}\r\n            foundContacts={foundContacts}\r\n        />\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: selectors.getAllContacts(state),\r\n    filter: selectors.getFilter(state),\r\n    foundContacts: selectors.contactsFinderHandler(state)\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    onStoreUpdate: contacts => dispatch(onStoreUpdate(contacts)),\r\n    onAddContact: contact => dispatch(onAddContact(contact)),\r\n    onDeleteContact: contactId => dispatch(onDeleteContact(contactId)),\r\n    onFilterContacts: event => dispatch(onFilterContacts(event))\r\n  })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookContainer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport PhoneBook from './App';\r\nimport PhoneBookContainer from './redux/containers/container';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <PhoneBookContainer />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContact_form\":\"ContactForm_addContact_form__BwtVt\",\"addContact_label\":\"ContactForm_addContact_label__3MSfT\",\"addContact_input\":\"ContactForm_addContact_input___6DRm\",\"input_text\":\"ContactForm_input_text__1WVdK\",\"addContact_button\":\"ContactForm_addContact_button__stiC0\"};"],"sourceRoot":""}